// This file was generated by createLibraryStarter.sce on 30-08-2023 03:27

mprintf("+++ Loading X2C library Control\n");
scilab_dir = getLibraryScilabPath(fullfile(get_absolute_file_path("starter.sce"), ".."));

// load and add help chapter
if or(getscilabmode() == ["NW";"STD"]) then
    path_addchapter = fullfile(scilab_dir, "jar");
    if isdir(path_addchapter) then
        add_help_chapter("X2C Control Library", path_addchapter, %F);
    end
end

// load interface functions
exec("x2c_uI.sci", -1);
exec("x2c_TF2.sci", -1);
exec("x2c_TF1.sci", -1);
exec("x2c_TDSystemO2.sci", -1);
exec("x2c_TDSystemO1.sci", -1);
exec("x2c_PT1.sci", -1);
exec("x2c_PLimit.sci", -1);
exec("x2c_PILimit.sci", -1);
exec("x2c_PIDLimit.sci", -1);
exec("x2c_PID.sci", -1);
exec("x2c_PI.sci", -1);
exec("x2c_P.sci", -1);
exec("x2c_ILimit.sci", -1);
exec("x2c_I.sci", -1);
exec("x2c_DT1.sci", -1);
exec("x2c_DLimit.sci", -1);
exec("x2c_Delay.sci", -1);
exec("x2c_D.sci", -1);
exec("x2c_AdaptivePT1.sci", -1);

palette_file = fullfile(scilab_dir, "Control.xpal");
// load/create palette for library
if isfile(palette_file) then
    // palette already exists -> load saved palette
    xcosPalAdd(palette_file, "X2C");
else
    
    // load blocks and build palette
    pal = xcosPal("Control");
    allIconsAvailable = %t;
    
    icon_dir = fullfile(scilab_dir, "Icons");
    
    // AdaptivePT1
    mprintf("Loading block AdaptivePT1...");
    o = x2c_AdaptivePT1("define");
    pal_icon = fullfile(icon_dir, "AdaptivePT1.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // D
    mprintf("Loading block D...");
    o = x2c_D("define");
    pal_icon = fullfile(icon_dir, "D.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Delay
    mprintf("Loading block Delay...");
    o = x2c_Delay("define");
    pal_icon = fullfile(icon_dir, "Delay.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // DLimit
    mprintf("Loading block DLimit...");
    o = x2c_DLimit("define");
    pal_icon = fullfile(icon_dir, "DLimit.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // DT1
    mprintf("Loading block DT1...");
    o = x2c_DT1("define");
    pal_icon = fullfile(icon_dir, "DT1.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // I
    mprintf("Loading block I...");
    o = x2c_I("define");
    pal_icon = fullfile(icon_dir, "I.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // ILimit
    mprintf("Loading block ILimit...");
    o = x2c_ILimit("define");
    pal_icon = fullfile(icon_dir, "ILimit.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // P
    mprintf("Loading block P...");
    o = x2c_P("define");
    pal_icon = fullfile(icon_dir, "P.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // PI
    mprintf("Loading block PI...");
    o = x2c_PI("define");
    pal_icon = fullfile(icon_dir, "PI.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // PID
    mprintf("Loading block PID...");
    o = x2c_PID("define");
    pal_icon = fullfile(icon_dir, "PID.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // PIDLimit
    mprintf("Loading block PIDLimit...");
    o = x2c_PIDLimit("define");
    pal_icon = fullfile(icon_dir, "PIDLimit.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // PILimit
    mprintf("Loading block PILimit...");
    o = x2c_PILimit("define");
    pal_icon = fullfile(icon_dir, "PILimit.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // PLimit
    mprintf("Loading block PLimit...");
    o = x2c_PLimit("define");
    pal_icon = fullfile(icon_dir, "PLimit.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // PT1
    mprintf("Loading block PT1...");
    o = x2c_PT1("define");
    pal_icon = fullfile(icon_dir, "PT1.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // TDSystemO1
    mprintf("Loading block TDSystemO1...");
    o = x2c_TDSystemO1("define");
    pal_icon = fullfile(icon_dir, "TDSystemO1.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // TDSystemO2
    mprintf("Loading block TDSystemO2...");
    o = x2c_TDSystemO2("define");
    pal_icon = fullfile(icon_dir, "TDSystemO2.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // TF1
    mprintf("Loading block TF1...");
    o = x2c_TF1("define");
    pal_icon = fullfile(icon_dir, "TF1.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // TF2
    mprintf("Loading block TF2...");
    o = x2c_TF2("define");
    pal_icon = fullfile(icon_dir, "TF2.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // uI
    mprintf("Loading block uI...");
    o = x2c_uI("define");
    pal_icon = fullfile(icon_dir, "uI.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    

    // load palette
    xcosPalAdd(pal, "X2C");
    
    // save palette if all icons are available
    if allIconsAvailable then
        // create directory for XPAL file if it does not exist
        if ~isdir(scilab_dir) then
            mkdir(scilab_dir);
        end
        xcosPalExport(pal, palette_file);
    end
    
end

// cleanup
clear("pal", "pal_icon", "style", "allIconsAvailable", "icon_dir", "scilab_dir");
clear("path_addchapter", "palette_file");

mprintf("---\n");
