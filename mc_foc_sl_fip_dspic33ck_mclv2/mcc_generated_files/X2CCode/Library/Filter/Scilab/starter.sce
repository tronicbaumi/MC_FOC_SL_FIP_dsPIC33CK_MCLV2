// This file was generated by createLibraryStarter.sce on 30-08-2023 03:27

mprintf("+++ Loading X2C library Filter\n");
scilab_dir = getLibraryScilabPath(fullfile(get_absolute_file_path("starter.sce"), ".."));

// load and add help chapter
if or(getscilabmode() == ["NW";"STD"]) then
    path_addchapter = fullfile(scilab_dir, "jar");
    if isdir(path_addchapter) then
        add_help_chapter("X2C Filter Library", path_addchapter, %F);
    end
end

// load interface functions
exec("x2c_MinMaxPeriod.sci", -1);
exec("x2c_LowpassBiQ.sci", -1);
exec("x2c_IIR.sci", -1);
exec("x2c_HighpassBiQ.sci", -1);
exec("x2c_FundFreq.sci", -1);
exec("x2c_Biquad.sci", -1);
exec("x2c_Bilin.sci", -1);
exec("x2c_BandstopBiQ.sci", -1);
exec("x2c_BandpassBiQ.sci", -1);
exec("x2c_AdaptiveNotc.sci", -1);
exec("x2c_ACDC.sci", -1);

palette_file = fullfile(scilab_dir, "Filter.xpal");
// load/create palette for library
if isfile(palette_file) then
    // palette already exists -> load saved palette
    xcosPalAdd(palette_file, "X2C");
else
    
    // load blocks and build palette
    pal = xcosPal("Filter");
    allIconsAvailable = %t;
    
    icon_dir = fullfile(scilab_dir, "Icons");
    
    // ACDC
    mprintf("Loading block ACDC...");
    o = x2c_ACDC("define");
    pal_icon = fullfile(icon_dir, "ACDC.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // AdaptiveNotch
    mprintf("Loading block AdaptiveNotch...");
    o = x2c_AdaptiveNotc("define");
    pal_icon = fullfile(icon_dir, "AdaptiveNotch.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // BandpassBiQ
    mprintf("Loading block BandpassBiQ...");
    o = x2c_BandpassBiQ("define");
    pal_icon = fullfile(icon_dir, "BandpassBiQ.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // BandstopBiQ
    mprintf("Loading block BandstopBiQ...");
    o = x2c_BandstopBiQ("define");
    pal_icon = fullfile(icon_dir, "BandstopBiQ.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Bilin
    mprintf("Loading block Bilin...");
    o = x2c_Bilin("define");
    pal_icon = fullfile(icon_dir, "Bilin.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Biquad
    mprintf("Loading block Biquad...");
    o = x2c_Biquad("define");
    pal_icon = fullfile(icon_dir, "Biquad.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // FundFreq
    mprintf("Loading block FundFreq...");
    o = x2c_FundFreq("define");
    pal_icon = fullfile(icon_dir, "FundFreq.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // HighpassBiQ
    mprintf("Loading block HighpassBiQ...");
    o = x2c_HighpassBiQ("define");
    pal_icon = fullfile(icon_dir, "HighpassBiQ.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // IIR
    mprintf("Loading block IIR...");
    o = x2c_IIR("define");
    pal_icon = fullfile(icon_dir, "IIR.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // LowpassBiQ
    mprintf("Loading block LowpassBiQ...");
    o = x2c_LowpassBiQ("define");
    pal_icon = fullfile(icon_dir, "LowpassBiQ.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // MinMaxPeriodic
    mprintf("Loading block MinMaxPeriodic...");
    o = x2c_MinMaxPeriod("define");
    pal_icon = fullfile(icon_dir, "MinMaxPeriodic.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    

    // load palette
    xcosPalAdd(pal, "X2C");
    
    // save palette if all icons are available
    if allIconsAvailable then
        // create directory for XPAL file if it does not exist
        if ~isdir(scilab_dir) then
            mkdir(scilab_dir);
        end
        xcosPalExport(pal, palette_file);
    end
    
end

// cleanup
clear("pal", "pal_icon", "style", "allIconsAvailable", "icon_dir", "scilab_dir");
clear("path_addchapter", "palette_file");

mprintf("---\n");
