// This file was generated by createLibraryStarter.sce on 04-05-2023 23:15

mprintf("+++ Loading X2C library MCHP\n");
scilab_dir = getLibraryScilabPath(fullfile(get_absolute_file_path("starter.sce"), ".."));

// load and add help chapter
if or(getscilabmode() == ["NW";"STD"]) then
    path_addchapter = fullfile(scilab_dir, "jar");
    if isdir(path_addchapter) then
        add_help_chapter("X2C MCHP Library", path_addchapter, %F);
    end
end

// load interface functions
exec("x2c_SVM_MCHP.sci", -1);
exec("x2c_SquareGen.sci", -1);
exec("x2c_RandomGen.sci", -1);
exec("x2c_Perturbation.sci", -1);
exec("x2c_Park_MCHP.sci", -1);
exec("x2c_Park_inv_MCH.sci", -1);
exec("x2c_Park_Clarke_.sci", -1);
exec("x2c_Clarke_Park_.sci", -1);
exec("x2c_Clarke_MCHP.sci", -1);
exec("x2c_Clarke_inv_M.sci", -1);
exec("x2c_BEMF_PLL_MCH.sci", -1);
exec("x2c_BEMF_MCHP.sci", -1);

palette_file = fullfile(scilab_dir, "MCHP.xpal");
// load/create palette for library
if isfile(palette_file) then
    // palette already exists -> load saved palette
    xcosPalAdd(palette_file, "X2C");
else
    
    // load blocks and build palette
    pal = xcosPal("MCHP");
    allIconsAvailable = %t;
    
    icon_dir = fullfile(scilab_dir, "Icons");
    
    // BEMF_MCHP
    mprintf("Loading block BEMF_MCHP...");
    o = x2c_BEMF_MCHP("define");
    pal_icon = fullfile(icon_dir, "BEMF_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // BEMF_PLL_MCHP
    mprintf("Loading block BEMF_PLL_MCHP...");
    o = x2c_BEMF_PLL_MCH("define");
    pal_icon = fullfile(icon_dir, "BEMF_PLL_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Clarke_inv_MCHP
    mprintf("Loading block Clarke_inv_MCHP...");
    o = x2c_Clarke_inv_M("define");
    pal_icon = fullfile(icon_dir, "Clarke_inv_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Clarke_MCHP
    mprintf("Loading block Clarke_MCHP...");
    o = x2c_Clarke_MCHP("define");
    pal_icon = fullfile(icon_dir, "Clarke_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Clarke_Park_MCHP
    mprintf("Loading block Clarke_Park_MCHP...");
    o = x2c_Clarke_Park_("define");
    pal_icon = fullfile(icon_dir, "Clarke_Park_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Park_Clarke_inv_SVM_MCHP
    mprintf("Loading block Park_Clarke_inv_SVM_MCHP...");
    o = x2c_Park_Clarke_("define");
    pal_icon = fullfile(icon_dir, "Park_Clarke_inv_SVM_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Park_inv_MCHP
    mprintf("Loading block Park_inv_MCHP...");
    o = x2c_Park_inv_MCH("define");
    pal_icon = fullfile(icon_dir, "Park_inv_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Park_MCHP
    mprintf("Loading block Park_MCHP...");
    o = x2c_Park_MCHP("define");
    pal_icon = fullfile(icon_dir, "Park_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // PerturbationGen
    mprintf("Loading block PerturbationGen...");
    o = x2c_Perturbation("define");
    pal_icon = fullfile(icon_dir, "PerturbationGen.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // RandomGen
    mprintf("Loading block RandomGen...");
    o = x2c_RandomGen("define");
    pal_icon = fullfile(icon_dir, "RandomGen.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // SquareGen
    mprintf("Loading block SquareGen...");
    o = x2c_SquareGen("define");
    pal_icon = fullfile(icon_dir, "SquareGen.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // SVM_MCHP
    mprintf("Loading block SVM_MCHP...");
    o = x2c_SVM_MCHP("define");
    pal_icon = fullfile(icon_dir, "SVM_MCHP.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    

    // load palette
    xcosPalAdd(pal, "X2C");
    
    // save palette if all icons are available
    if allIconsAvailable then
        // create directory for XPAL file if it does not exist
        if ~isdir(scilab_dir) then
            mkdir(scilab_dir);
        end
        xcosPalExport(pal, palette_file);
    end
    
end

// cleanup
clear("pal", "pal_icon", "style", "allIconsAvailable", "icon_dir", "scilab_dir");
clear("path_addchapter", "palette_file");

mprintf("---\n");
