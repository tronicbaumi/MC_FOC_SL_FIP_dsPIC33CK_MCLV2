// This file was generated by createLibraryBuilder.sce on 30-08-2023 03:21

jimport at.lcm.x2c.utils.Utils;
jimport java.io.File;
if(findmsvccompiler() ~= "unknown") then
    configure_msvc();
end
if ~haveacompiler() then
    mprintf("Building General library for x86 system skipped (no compiler found).\n");
    return;
end

X2C_ROOT = jinvoke(jinvoke(Utils, "getRootDirectory"), "toString");
X2C_LIB_PATH = get_absolute_file_path("builder_x86.sce");
X2C_LIB_PATH = jinvoke(jnewInstance(File, X2C_LIB_PATH), "getParent");

try
    // delete "is-compiled" marker
    mdelete("Library_is_compiled_for_x86.*");

    // prepare names and flags for building command
    names = [];
    files = [];
    names = [names,  "x2c_And_Bool_C"];
    files = [files,  "x2c_And_Bool_C.c"];
    names = [names,  "x2c_AutoSwitch_FiP16_C" "x2c_AutoSwitch_FiP32_C" "x2c_AutoSwitch_Float32_C" "x2c_AutoSwitch_Float64_C"];
    files = [files,  "x2c_AutoSwitch_FiP16_C.c" "x2c_AutoSwitch_FiP32_C.c" "x2c_AutoSwitch_Float32_C.c" "x2c_AutoSwitch_Float64_C.c"];
    names = [names,  "x2c_Constant_Bool_C" "x2c_Constant_Int8_C" "x2c_Constant_Int16_C" "x2c_Constant_Int32_C" "x2c_Constant_FiP8_C" "x2c_Constant_FiP16_C" "x2c_Constant_FiP32_C" "x2c_Constant_Float32_C" "x2c_Constant_Float64_C"];
    files = [files,  "x2c_Constant_Bool_C.c" "x2c_Constant_Int8_C.c" "x2c_Constant_Int16_C.c" "x2c_Constant_Int32_C.c" "x2c_Constant_FiP8_C.c" "x2c_Constant_FiP16_C.c" "x2c_Constant_FiP32_C.c" "x2c_Constant_Float32_C.c" "x2c_Constant_Float64_C.c"];
    names = [names,  "x2c_Gain_FiP8_C" "x2c_Gain_FiP16_C" "x2c_Gain_FiP32_C" "x2c_Gain_Float32_C" "x2c_Gain_Float64_C"];
    files = [files,  "x2c_Gain_FiP8_C.c" "x2c_Gain_FiP16_C.c" "x2c_Gain_FiP32_C.c" "x2c_Gain_Float32_C.c" "x2c_Gain_Float64_C.c"];
    names = [names,  "x2c_Inport_bool_C" "x2c_Inport_int8_C" "x2c_Inport_int16_C" "x2c_Inport_int32_C" "x2c_Inport_float32_C" "x2c_Inport_float64_C"];
    files = [files,  "x2c_Inport_bool_C.c" "x2c_Inport_int8_C.c" "x2c_Inport_int16_C.c" "x2c_Inport_int32_C.c" "x2c_Inport_float32_C.c" "x2c_Inport_float64_C.c"];
    names = [names,  "x2c_Int2Re_FiP8_Float32_C" "x2c_Int2Re_FiP16_Float32_C" "x2c_Int2Re_FiP32_Float32_C" "x2c_Int2Re_FiP8_Float64_C" "x2c_Int2Re_FiP16_Float64_C" "x2c_Int2Re_FiP32_Float64_C" "x2c_Int2Re_Bool_Float32_C" "x2c_Int2Re_Bool_Float64_C"];
    files = [files,  "x2c_Int2Re_FiP8_Float32_C.c" "x2c_Int2Re_FiP16_Float32_C.c" "x2c_Int2Re_FiP32_Float32_C.c" "x2c_Int2Re_FiP8_Float64_C.c" "x2c_Int2Re_FiP16_Float64_C.c" "x2c_Int2Re_FiP32_Float64_C.c" "x2c_Int2Re_Bool_Float32_C.c" "x2c_Int2Re_Bool_Float64_C.c"];
    names = [names,  "x2c_Limitation_FiP16_C" "x2c_Limitation_FiP32_C" "x2c_Limitation_Float32_C" "x2c_Limitation_Float64_C"];
    files = [files,  "x2c_Limitation_FiP16_C.c" "x2c_Limitation_FiP32_C.c" "x2c_Limitation_Float32_C.c" "x2c_Limitation_Float64_C.c"];
    names = [names,  "x2c_LookupTable_FiP8_C" "x2c_LookupTable_FiP16_C" "x2c_LookupTable_FiP32_C"];
    files = [files,  "x2c_LookupTable_FiP8_C.c" "x2c_LookupTable_FiP16_C.c" "x2c_LookupTable_FiP32_C.c"];
    names = [names,  "x2c_LookupTable1_FiP16_C" "x2c_LookupTable1_FiP32_C" "x2c_LookupTable1_Float32_C" "x2c_LookupTable1_Float64_C"];
    files = [files,  "x2c_LookupTable1_FiP16_C.c" "x2c_LookupTable1_FiP32_C.c" "x2c_LookupTable1_Float32_C.c" "x2c_LookupTable1_Float64_C.c"];
    names = [names,  "x2c_LookupTable2_FiP16_C" "x2c_LookupTable2_FiP32_C" "x2c_LookupTable2_Float32_C" "x2c_LookupTable2_Float64_C"];
    files = [files,  "x2c_LookupTable2_FiP16_C.c" "x2c_LookupTable2_FiP32_C.c" "x2c_LookupTable2_Float32_C.c" "x2c_LookupTable2_Float64_C.c"];
    names = [names,  "x2c_LookupTable3_FiP16_C" "x2c_LookupTable3_FiP32_C" "x2c_LookupTable3_Float32_C" "x2c_LookupTable3_Float64_C"];
    files = [files,  "x2c_LookupTable3_FiP16_C.c" "x2c_LookupTable3_FiP32_C.c" "x2c_LookupTable3_Float32_C.c" "x2c_LookupTable3_Float64_C.c"];
    names = [names,  "x2c_LoopBreaker_Bool_C" "x2c_LoopBreaker_FiP16_C" "x2c_LoopBreaker_FiP32_C" "x2c_LoopBreaker_Float32_C" "x2c_LoopBreaker_Float64_C"];
    files = [files,  "x2c_LoopBreaker_Bool_C.c" "x2c_LoopBreaker_FiP16_C.c" "x2c_LoopBreaker_FiP32_C.c" "x2c_LoopBreaker_Float32_C.c" "x2c_LoopBreaker_Float64_C.c"];
    names = [names,  "x2c_ManualSwitch_Bool_C" "x2c_ManualSwitch_FiP8_C" "x2c_ManualSwitch_FiP16_C" "x2c_ManualSwitch_FiP32_C" "x2c_ManualSwitch_Float32_C" "x2c_ManualSwitch_Float64_C"];
    files = [files,  "x2c_ManualSwitch_Bool_C.c" "x2c_ManualSwitch_FiP8_C.c" "x2c_ManualSwitch_FiP16_C.c" "x2c_ManualSwitch_FiP32_C.c" "x2c_ManualSwitch_Float32_C.c" "x2c_ManualSwitch_Float64_C.c"];
    names = [names,  "x2c_Maximum_FiP16_C" "x2c_Maximum_FiP32_C" "x2c_Maximum_Float32_C" "x2c_Maximum_Float64_C"];
    files = [files,  "x2c_Maximum_FiP16_C.c" "x2c_Maximum_FiP32_C.c" "x2c_Maximum_Float32_C.c" "x2c_Maximum_Float64_C.c"];
    names = [names,  "x2c_Minimum_FiP16_C" "x2c_Minimum_FiP32_C" "x2c_Minimum_Float32_C" "x2c_Minimum_Float64_C"];
    files = [files,  "x2c_Minimum_FiP16_C.c" "x2c_Minimum_FiP32_C.c" "x2c_Minimum_Float32_C.c" "x2c_Minimum_Float64_C.c"];
    names = [names,  "x2c_Not_Bool_C"];
    files = [files,  "x2c_Not_Bool_C.c"];
    names = [names,  "x2c_Or_Bool_C"];
    files = [files,  "x2c_Or_Bool_C.c"];
    names = [names,  "x2c_Outport_bool_C" "x2c_Outport_int8_C" "x2c_Outport_int16_C" "x2c_Outport_int32_C" "x2c_Outport_float32_C" "x2c_Outport_float64_C"];
    files = [files,  "x2c_Outport_bool_C.c" "x2c_Outport_int8_C.c" "x2c_Outport_int16_C.c" "x2c_Outport_int32_C.c" "x2c_Outport_float32_C.c" "x2c_Outport_float64_C.c"];
    names = [names,  "x2c_RateLimiter_FiP16_C" "x2c_RateLimiter_FiP32_C" "x2c_RateLimiter_Float32_C" "x2c_RateLimiter_Float64_C"];
    files = [files,  "x2c_RateLimiter_FiP16_C.c" "x2c_RateLimiter_FiP32_C.c" "x2c_RateLimiter_Float32_C.c" "x2c_RateLimiter_Float64_C.c"];
    names = [names,  "x2c_Real2I_Float32_FiP8_C" "x2c_Real2I_Float32_FiP16_C" "x2c_Real2I_Float32_FiP32_C" "x2c_Real2I_Float64_FiP8_C" "x2c_Real2I_Float64_FiP16_C" "x2c_Real2I_Float64_FiP32_C" "x2c_Real2I_Float32_Bool_C" "x2c_Real2I_Float64_Bool_C"];
    files = [files,  "x2c_Real2I_Float32_FiP8_C.c" "x2c_Real2I_Float32_FiP16_C.c" "x2c_Real2I_Float32_FiP32_C.c" "x2c_Real2I_Float64_FiP8_C.c" "x2c_Real2I_Float64_FiP16_C.c" "x2c_Real2I_Float64_FiP32_C.c" "x2c_Real2I_Float32_Bool_C.c" "x2c_Real2I_Float64_Bool_C.c"];
    names = [names,  "x2c_Saturation_FiP16_C" "x2c_Saturation_FiP32_C" "x2c_Saturation_Float32_C" "x2c_Saturation_Float64_C"];
    files = [files,  "x2c_Saturation_FiP16_C.c" "x2c_Saturation_FiP32_C.c" "x2c_Saturation_Float32_C.c" "x2c_Saturation_Float64_C.c"];
    names = [names,  "x2c_SaveSignal_FiP8_C" "x2c_SaveSignal_FiP16_C" "x2c_SaveSignal_FiP32_C" "x2c_SaveSignal_Float32_C" "x2c_SaveSignal_Float64_C"];
    files = [files,  "x2c_SaveSignal_FiP8_C.c" "x2c_SaveSignal_FiP16_C.c" "x2c_SaveSignal_FiP32_C.c" "x2c_SaveSignal_Float32_C.c" "x2c_SaveSignal_Float64_C.c"];
    names = [names,  "x2c_Selector_FiP8_C" "x2c_Selector_FiP16_C" "x2c_Selector_FiP32_C" "x2c_Selector_Float32_C" "x2c_Selector_Float64_C"];
    files = [files,  "x2c_Selector_FiP8_C.c" "x2c_Selector_FiP16_C.c" "x2c_Selector_FiP32_C.c" "x2c_Selector_Float32_C.c" "x2c_Selector_Float64_C.c"];
    names = [names,  "x2c_Sequencer_FiP8_C" "x2c_Sequencer_FiP16_C" "x2c_Sequencer_FiP32_C" "x2c_Sequencer_Float32_C" "x2c_Sequencer_Float64_C"];
    files = [files,  "x2c_Sequencer_FiP8_C.c" "x2c_Sequencer_FiP16_C.c" "x2c_Sequencer_FiP32_C.c" "x2c_Sequencer_Float32_C.c" "x2c_Sequencer_Float64_C.c"];
    names = [names,  "x2c_Sin2Limiter_FiP16_C" "x2c_Sin2Limiter_FiP32_C" "x2c_Sin2Limiter_Float32_C" "x2c_Sin2Limiter_Float64_C"];
    files = [files,  "x2c_Sin2Limiter_FiP16_C.c" "x2c_Sin2Limiter_FiP32_C.c" "x2c_Sin2Limiter_Float32_C.c" "x2c_Sin2Limiter_Float64_C.c"];
    names = [names,  "x2c_Sin3Gen_FiP16_C" "x2c_Sin3Gen_FiP32_C" "x2c_Sin3Gen_Float32_C" "x2c_Sin3Gen_Float64_C"];
    files = [files,  "x2c_Sin3Gen_FiP16_C.c" "x2c_Sin3Gen_FiP32_C.c" "x2c_Sin3Gen_Float32_C.c" "x2c_Sin3Gen_Float64_C.c"];
    names = [names,  "x2c_SinGen_FiP16_C" "x2c_SinGen_FiP32_C" "x2c_SinGen_Float32_C" "x2c_SinGen_Float64_C"];
    files = [files,  "x2c_SinGen_FiP16_C.c" "x2c_SinGen_FiP32_C.c" "x2c_SinGen_Float32_C.c" "x2c_SinGen_Float64_C.c"];
    names = [names,  "x2c_TypeConv_FiP8_16_C" "x2c_TypeConv_FiP8_32_C" "x2c_TypeConv_FiP16_8_C" "x2c_TypeConv_FiP16_32_C" "x2c_TypeConv_FiP32_8_C" "x2c_TypeConv_FiP32_16_C" "x2c_TypeConv_Bool_FiP16_C" "x2c_TypeConv_Bool_FiP32_C" "x2c_TypeConv_FiP16_Bool_C" "x2c_TypeConv_FiP32_Bool_C"];
    files = [files,  "x2c_TypeConv_FiP8_16_C.c" "x2c_TypeConv_FiP8_32_C.c" "x2c_TypeConv_FiP16_8_C.c" "x2c_TypeConv_FiP16_32_C.c" "x2c_TypeConv_FiP32_8_C.c" "x2c_TypeConv_FiP32_16_C.c" "x2c_TypeConv_Bool_FiP16_C.c" "x2c_TypeConv_Bool_FiP32_C.c" "x2c_TypeConv_FiP16_Bool_C.c" "x2c_TypeConv_FiP32_Bool_C.c"];
    names = [names,  "x2c_uConstant_Bool_C" "x2c_uConstant_Int8_C" "x2c_uConstant_Int16_C" "x2c_uConstant_Int32_C" "x2c_uConstant_FiP8_C" "x2c_uConstant_FiP16_C" "x2c_uConstant_FiP32_C" "x2c_uConstant_Float32_C" "x2c_uConstant_Float64_C"];
    files = [files,  "x2c_uConstant_Bool_C.c" "x2c_uConstant_Int8_C.c" "x2c_uConstant_Int16_C.c" "x2c_uConstant_Int32_C.c" "x2c_uConstant_FiP8_C.c" "x2c_uConstant_FiP16_C.c" "x2c_uConstant_FiP32_C.c" "x2c_uConstant_Float32_C.c" "x2c_uConstant_Float64_C.c"];
    names = [names,  "x2c_uGain_FiP8_C" "x2c_uGain_FiP16_C" "x2c_uGain_FiP32_C" "x2c_uGain_Float32_C" "x2c_uGain_Float64_C"];
    files = [files,  "x2c_uGain_FiP8_C.c" "x2c_uGain_FiP16_C.c" "x2c_uGain_FiP32_C.c" "x2c_uGain_Float32_C.c" "x2c_uGain_Float64_C.c"];
    names = [names,  "x2c_uRateLimiter_FiP16_C" "x2c_uRateLimiter_FiP32_C" "x2c_uRateLimiter_Float32_C" "x2c_uRateLimiter_Float64_C"];
    files = [files,  "x2c_uRateLimiter_FiP16_C.c" "x2c_uRateLimiter_FiP32_C.c" "x2c_uRateLimiter_Float32_C.c" "x2c_uRateLimiter_Float64_C.c"];
    names = [names,  "x2c_uSaveSignal_FiP8_C" "x2c_uSaveSignal_FiP16_C" "x2c_uSaveSignal_FiP32_C" "x2c_uSaveSignal_Float32_C" "x2c_uSaveSignal_Float64_C"];
    files = [files,  "x2c_uSaveSignal_FiP8_C.c" "x2c_uSaveSignal_FiP16_C.c" "x2c_uSaveSignal_FiP32_C.c" "x2c_uSaveSignal_Float32_C.c" "x2c_uSaveSignal_Float64_C.c"];
    names = [names,  "x2c_Xor_Bool_C"];
    files = [files,  "x2c_Xor_Bool_C.c"];
    files = [files, "x2c_Utils.c"];
    flag = "c";
    loadername = "loader_x86.sce";
    libname = "General_x86";
    ldflags = fullfile(SCI, "bin", "scicos.lib");
    cflags = "-I" + fullfile(SCI, "modules", "scicos_blocks", "includes") + " -I" + fullfile(SCI, "modules", "scicos", "includes") + " -I" + fullfile(X2C_ROOT, "Controller", "Common") + " -I" + fullfile(X2C_LIB_PATH, "Controller", "src") + " -I" + fullfile(X2C_LIB_PATH, "Controller", "inc");

    // Support for Scilab 5 build in different directory
    if isMajorVersionLessThan(6) then
        scilab5_path = fullfile(X2C_LIB_PATH, "Scilab5");
        if ~isdir(scilab5_path) then
            mkdir(scilab5_path);
        end
        // copy C source files
        num_files = size(files, 2);
        for i = 1:num_files
            copyfile(files(i), scilab5_path);
        end
        // switch to Scilab 5 directory to start build there
        cd(scilab5_path);
    end

    // build library
    ilib_for_link(names, files, [], flag, "", loadername, libname, ldflags, cflags);

    // delete temporary C files for Scilab 5 build
    if isMajorVersionLessThan(6) then
        mdelete(fullfile(scilab5_path, "*.c"));
    end
    // delete temporary files
    if isdir("Debug") then
      rmdir("Debug","s");
    end
    if isdir("Release") then
      rmdir("Release","s");
    end
    mdelete("Makelib.mak")

    // create "is-compiled" marker
    currentTime=clock();
    save("Library_is_compiled_for_x86.hdf5", "currentTime");

    mprintf("Library General for x86 system built.\n");

catch
    mprintf("Error building library General for x86 system: %s\n", lasterror());
end
