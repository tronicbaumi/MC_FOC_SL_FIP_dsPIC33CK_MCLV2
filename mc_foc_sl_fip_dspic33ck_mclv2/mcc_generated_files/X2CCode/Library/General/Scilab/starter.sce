// This file was generated by createLibraryStarter.sce on 30-08-2023 03:26

mprintf("+++ Loading X2C library General\n");
scilab_dir = getLibraryScilabPath(fullfile(get_absolute_file_path("starter.sce"), ".."));

// load and add help chapter
if or(getscilabmode() == ["NW";"STD"]) then
    path_addchapter = fullfile(scilab_dir, "jar");
    if isdir(path_addchapter) then
        add_help_chapter("X2C General Library", path_addchapter, %F);
    end
end

// load interface functions
exec("x2c_Xor.sci", -1);
exec("x2c_uSaveSignal.sci", -1);
exec("x2c_uRateLimiter.sci", -1);
exec("x2c_uGain.sci", -1);
exec("x2c_uConstant.sci", -1);
exec("x2c_TypeConv.sci", -1);
exec("x2c_SinGen.sci", -1);
exec("x2c_Sin3Gen.sci", -1);
exec("x2c_Sin2Limiter.sci", -1);
exec("x2c_Sequencer.sci", -1);
exec("x2c_Selector.sci", -1);
exec("x2c_SaveSignal.sci", -1);
exec("x2c_Saturation.sci", -1);
exec("x2c_Real2I.sci", -1);
exec("x2c_RateLimiter.sci", -1);
exec("x2c_Outport.sci", -1);
exec("x2c_Or.sci", -1);
exec("x2c_Not.sci", -1);
exec("x2c_Minimum.sci", -1);
exec("x2c_Maximum.sci", -1);
exec("x2c_ManualSwitch.sci", -1);
exec("x2c_LoopBreaker.sci", -1);
exec("x2c_LookupTable3.sci", -1);
exec("x2c_LookupTable2.sci", -1);
exec("x2c_LookupTable1.sci", -1);
exec("x2c_LookupTable.sci", -1);
exec("x2c_Limitation.sci", -1);
exec("x2c_Int2Re.sci", -1);
exec("x2c_Inport.sci", -1);
exec("x2c_Gain.sci", -1);
exec("x2c_Constant.sci", -1);
exec("x2c_AutoSwitch.sci", -1);
exec("x2c_And.sci", -1);

palette_file = fullfile(scilab_dir, "General.xpal");
// load/create palette for library
if isfile(palette_file) then
    // palette already exists -> load saved palette
    xcosPalAdd(palette_file, "X2C");
else
    
    // load blocks and build palette
    pal = xcosPal("General");
    allIconsAvailable = %t;
    
    icon_dir = fullfile(scilab_dir, "Icons");
    
    // And
    mprintf("Loading block And...");
    o = x2c_And("define");
    pal_icon = fullfile(icon_dir, "And.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // AutoSwitch
    mprintf("Loading block AutoSwitch...");
    o = x2c_AutoSwitch("define");
    pal_icon = fullfile(icon_dir, "AutoSwitch.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Constant
    mprintf("Loading block Constant...");
    o = x2c_Constant("define");
    pal_icon = fullfile(icon_dir, "Constant.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Gain
    mprintf("Loading block Gain...");
    o = x2c_Gain("define");
    pal_icon = fullfile(icon_dir, "Gain.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Inport
    mprintf("Loading block Inport...");
    o = x2c_Inport("define");
    pal_icon = fullfile(icon_dir, "Inport.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Int2Real
    mprintf("Loading block Int2Real...");
    o = x2c_Int2Re("define");
    pal_icon = fullfile(icon_dir, "Int2Real.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Limitation
    mprintf("Loading block Limitation...");
    o = x2c_Limitation("define");
    pal_icon = fullfile(icon_dir, "Limitation.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // LookupTable
    mprintf("Loading block LookupTable...");
    o = x2c_LookupTable("define");
    pal_icon = fullfile(icon_dir, "LookupTable.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // LookupTable1D
    mprintf("Loading block LookupTable1D...");
    o = x2c_LookupTable1("define");
    pal_icon = fullfile(icon_dir, "LookupTable1D.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // LookupTable2D
    mprintf("Loading block LookupTable2D...");
    o = x2c_LookupTable2("define");
    pal_icon = fullfile(icon_dir, "LookupTable2D.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // LookupTable3D
    mprintf("Loading block LookupTable3D...");
    o = x2c_LookupTable3("define");
    pal_icon = fullfile(icon_dir, "LookupTable3D.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // LoopBreaker
    mprintf("Loading block LoopBreaker...");
    o = x2c_LoopBreaker("define");
    pal_icon = fullfile(icon_dir, "LoopBreaker.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // ManualSwitch
    mprintf("Loading block ManualSwitch...");
    o = x2c_ManualSwitch("define");
    pal_icon = fullfile(icon_dir, "ManualSwitch.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Maximum
    mprintf("Loading block Maximum...");
    o = x2c_Maximum("define");
    pal_icon = fullfile(icon_dir, "Maximum.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Minimum
    mprintf("Loading block Minimum...");
    o = x2c_Minimum("define");
    pal_icon = fullfile(icon_dir, "Minimum.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Not
    mprintf("Loading block Not...");
    o = x2c_Not("define");
    pal_icon = fullfile(icon_dir, "Not.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Or
    mprintf("Loading block Or...");
    o = x2c_Or("define");
    pal_icon = fullfile(icon_dir, "Or.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Outport
    mprintf("Loading block Outport...");
    o = x2c_Outport("define");
    pal_icon = fullfile(icon_dir, "Outport.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // RateLimiter
    mprintf("Loading block RateLimiter...");
    o = x2c_RateLimiter("define");
    pal_icon = fullfile(icon_dir, "RateLimiter.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Real2Int
    mprintf("Loading block Real2Int...");
    o = x2c_Real2I("define");
    pal_icon = fullfile(icon_dir, "Real2Int.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Saturation
    mprintf("Loading block Saturation...");
    o = x2c_Saturation("define");
    pal_icon = fullfile(icon_dir, "Saturation.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // SaveSignal
    mprintf("Loading block SaveSignal...");
    o = x2c_SaveSignal("define");
    pal_icon = fullfile(icon_dir, "SaveSignal.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Selector
    mprintf("Loading block Selector...");
    o = x2c_Selector("define");
    pal_icon = fullfile(icon_dir, "Selector.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Sequencer
    mprintf("Loading block Sequencer...");
    o = x2c_Sequencer("define");
    pal_icon = fullfile(icon_dir, "Sequencer.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Sin2Limiter
    mprintf("Loading block Sin2Limiter...");
    o = x2c_Sin2Limiter("define");
    pal_icon = fullfile(icon_dir, "Sin2Limiter.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Sin3Gen
    mprintf("Loading block Sin3Gen...");
    o = x2c_Sin3Gen("define");
    pal_icon = fullfile(icon_dir, "Sin3Gen.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // SinGen
    mprintf("Loading block SinGen...");
    o = x2c_SinGen("define");
    pal_icon = fullfile(icon_dir, "SinGen.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // TypeConv
    mprintf("Loading block TypeConv...");
    o = x2c_TypeConv("define");
    pal_icon = fullfile(icon_dir, "TypeConv.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // uConstant
    mprintf("Loading block uConstant...");
    o = x2c_uConstant("define");
    pal_icon = fullfile(icon_dir, "uConstant.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // uGain
    mprintf("Loading block uGain...");
    o = x2c_uGain("define");
    pal_icon = fullfile(icon_dir, "uGain.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // uRateLimiter
    mprintf("Loading block uRateLimiter...");
    o = x2c_uRateLimiter("define");
    pal_icon = fullfile(icon_dir, "uRateLimiter.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // uSaveSignal
    mprintf("Loading block uSaveSignal...");
    o = x2c_uSaveSignal("define");
    pal_icon = fullfile(icon_dir, "uSaveSignal.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    // Xor
    mprintf("Loading block Xor...");
    o = x2c_Xor("define");
    pal_icon = fullfile(icon_dir, "Xor.png");
    if ~isfile(pal_icon) then
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, o.graphics.style);
    clear("o");
    mprintf("done\n");
    
    

    // load palette
    xcosPalAdd(pal, "X2C");
    
    // save palette if all icons are available
    if allIconsAvailable then
        // create directory for XPAL file if it does not exist
        if ~isdir(scilab_dir) then
            mkdir(scilab_dir);
        end
        xcosPalExport(pal, palette_file);
    end
    
end

// cleanup
clear("pal", "pal_icon", "style", "allIconsAvailable", "icon_dir", "scilab_dir");
clear("path_addchapter", "palette_file");

mprintf("---\n");
